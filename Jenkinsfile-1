pipeline {
    agent {
        node {
            label 'dockerhost-build-server'
        }
    }
    tools {
        maven 'maven-3.9.6'
    }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('devops-dockerhub-token')
        DOCKER_USER = 'eruizvel'
    }
    stages {
        stage('Packaging') {
            steps {
                echo 'Packaging WAR file with Maven...'
                sh 'mvn clean package'
            }
        }

        stage('Copying WAR file') {
            steps {
                echo 'Copying WAR file to workspace root...'
                sh 'mv target/*.war .'
            }
        }

        stage('Cleanup old container') {
    steps {
        echo 'Checking and removing old container if it exists...'
        sh '''
            CONTAINER_ID=$(docker ps -aqf "name=devops-web-project-server")
            if [ -n "$CONTAINER_ID" ]; then
                echo "Removing existing container $CONTAINER_ID"
                docker rm -f $CONTAINER_ID
            else
                echo "No existing container found."
            fi
        '''
            }
        }

        stage('Build Docker image') {
            steps {
                echo 'Building Docker image...'
                sh 'docker build -t ${DOCKER_USER}/devops-web-project:v1 --label devops-web-project-server .'
            }
        }

        stage('Login to Docker Hub') {
            steps {
                echo 'Authenticating to Docker Hub...'
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        stage('Push image to Docker Hub') {
            steps {
                echo 'Pushing image to Docker Hub...'
                sh 'docker push ${DOCKER_USER}/devops-web-project:v1'
            }
        }

        stage('Run Docker container') {
            steps {
                echo 'Running Docker container on port 8081...'
                sh 'docker run -d --name devops-web-project-server --label devops-web-project-server -p 8081:8080 ${DOCKER_USER}/devops-web-project:v1'
            }
        }
    }

    post {
        always {
            echo 'Cleaning up Docker login session...'
            sh 'docker logout'
        }
    }
}
